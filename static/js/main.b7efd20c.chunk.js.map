{"version":3,"sources":["components/TransactionAlert.js","helpers/stellar.js","pages/Home.js","helpers/calculator.js","App.js","reportWebVitals.js","index.js"],"names":["TransactionAlert","props","hidden","alertMessage","transactionSuccessful","className","StellarSdk","require","Home","useState","Number","loanAmount","setLoanAmount","minimumRepayment","setMinimumRepayment","repaymentAmount","setRepaymentAmount","totalLoanAmount","setTotalLoanAmount","twoPercentOfInterestPaid","setTwoPercentOfInterestPaid","borrowerRewards","setBorrowerRewards","setTransactionSuccessful","hide","setHide","setAlertMessage","isHidden","setIsHidden","setIsMinimumRepaymentAlertHidden","borrowerAccountPrivateKey","setBorrowerAccountPrivateKey","input","useRef","useEffect","INTEREST","calculateMinimumRepayment","calculateTotalLoanAmount","calculate2PercentOfInterestPaid","differenceBetweenMinimumRepaymentAndRepaymentAmount","undefined","calculateBorrowerRewards","type","id","onChange","e","target","value","placeholder","ref","toFixed","onClick","current","forhtml","name","length","indexOf","preventDefault","server","Server","issuingKeys","Keypair","fromSecret","receivingKeys","WNT","Asset","publicKey","AUD","loadAccount","then","account","transaction","TransactionBuilder","fee","BASE_FEE","networkPassphrase","Networks","TESTNET","addOperation","Operation","changeTrust","asset","setTimeout","build","sign","submitTransaction","console","log","issuer","payment","destination","amount","catch","error","transactionSubmitter","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b7efd20c.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst TransactionAlert = (props) => {\r\n  const hidden = props.hidden;\r\n  const alertMessage = props.alertMessage;\r\n  const transactionSuccessful = props.transactionSuccessful;\r\n  return (\r\n    <div>\r\n      <p\r\n        hidden={hidden}\r\n        className={\r\n          transactionSuccessful == true\r\n            ? 'text-green-600 bg-green-100 rounded'\r\n            : 'text-red-600 bg-red-100 rounded'\r\n        }>\r\n        {alertMessage}\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TransactionAlert;\r\n","const StellarSdk = require('stellar-sdk');\n\nconst issuerAccountPrivateKey = 'SA3R3BAGXSXOKUKFGKTYP2GONMTPPGEFBYLFMAAM5LI33ZKYDQ7TIPJC';\n\n// eslint-disable-next-line import/prefer-default-export\nexport const transactionSubmitter = (\n  borrowerAccountPrivateKey,\n  borrowerRewards,\n  twoPercentOfInterestPaid,\n  setTransactionSuccessful\n) => {\n  const server = new StellarSdk.Server('https://horizon-testnet.stellar.org');\n  // Keys for accounts to issue and receive the new asset\n  const issuingKeys = StellarSdk.Keypair.fromSecret(issuerAccountPrivateKey);\n  const receivingKeys = StellarSdk.Keypair.fromSecret(borrowerAccountPrivateKey);\n\n  // Create an object to represent the new asset\n  const WNT = new StellarSdk.Asset('WNT', issuingKeys.publicKey());\n  const AUD = new StellarSdk.Asset('AUD', issuingKeys.publicKey());\n\n  // First, the receiving account must trust the asset\n  server\n    .loadAccount(receivingKeys.publicKey())\n    .then((account) => {\n      const transaction = new StellarSdk.TransactionBuilder(account, {\n        fee: StellarSdk.BASE_FEE,\n        networkPassphrase: StellarSdk.Networks.TESTNET,\n      })\n        .addOperation(\n          StellarSdk.Operation.changeTrust({\n            asset: WNT,\n          })\n        )\n        .addOperation(\n          StellarSdk.Operation.changeTrust({\n            asset: AUD,\n          })\n        )\n\n        // setTimeout is required for a transaction\n        .setTimeout(100)\n        .build();\n      transaction.sign(receivingKeys);\n      return server.submitTransaction(transaction);\n    })\n\n    .then(console.log())\n\n    // Second, the issuing account actually sends a payment using the asset\n    .then(() => server.loadAccount(issuingKeys.publicKey()))\n    .then((issuer) => {\n      const transaction = new StellarSdk.TransactionBuilder(issuer, {\n        fee: StellarSdk.BASE_FEE,\n        networkPassphrase: StellarSdk.Networks.TESTNET,\n      })\n        .addOperation(\n          StellarSdk.Operation.payment({\n            destination: receivingKeys.publicKey(),\n            asset: WNT,\n            amount: borrowerRewards.toFixed(2),\n          })\n        )\n        .addOperation(\n          StellarSdk.Operation.payment({\n            destination: receivingKeys.publicKey(),\n            asset: AUD,\n            amount: twoPercentOfInterestPaid.toFixed(2),\n          })\n        )\n        // setTimeout is required for a transaction\n        .setTimeout(100)\n        .build();\n      transaction.sign(issuingKeys);\n      return server.submitTransaction(transaction);\n    })\n    .then(\n      () => setTransactionSuccessful(true),\n      () => setTransactionSuccessful(false)\n    )\n    .catch((error) => {\n      console.error('Error!', error);\n    });\n};\n","import React from 'react';\r\nimport { useState, useEffect, useRef } from 'react';\r\nimport {\r\n  calculateMinimumRepayment,\r\n  calculateTotalLoanAmount,\r\n  calculate2PercentOfInterestPaid,\r\n  calculateBorrowerRewards,\r\n} from '../helpers/calculator';\r\nimport TransactionAlert from '../components/TransactionAlert';\r\nimport { transactionSubmitter } from '../helpers/stellar';\r\nimport { SiStellar } from 'react-icons/si';\r\n\r\nconst Home = (props) => {\r\n  const [loanAmount, setLoanAmount] = useState(Number);\r\n  const [minimumRepayment, setMinimumRepayment] = useState(Number);\r\n  const [repaymentAmount, setRepaymentAmount] = useState(99999);\r\n  const [totalLoanAmount, setTotalLoanAmount] = useState(Number);\r\n  const [twoPercentOfInterestPaid, setTwoPercentOfInterestPaid] = useState(Number);\r\n  const [borrowerRewards, setBorrowerRewards] = useState(Number);\r\n  const [transactionSuccessful, setTransactionSuccessful] = useState(null);\r\n  const [hide, setHide] = useState('invisible');\r\n  const [alertMessage, setAlertMessage] = useState('');\r\n  const [isHidden, setIsHidden] = useState(true);\r\n  const [isMinimumRepaymentAlertHidden, setIsMinimumRepaymentAlertHidden] = useState(true);\r\n  const [borrowerAccountPrivateKey, setBorrowerAccountPrivateKey] = useState('');\r\n  const input = useRef(null);\r\n\r\n  useEffect(() => {\r\n    if (transactionSuccessful === true) {\r\n      setHide(false);\r\n      setAlertMessage('Transaction Succesful');\r\n    } else if (transactionSuccessful === false) {\r\n      setHide(false);\r\n      setAlertMessage('Transaction Failed');\r\n    }\r\n  }, [transactionSuccessful]);\r\n\r\n  useEffect(() => {\r\n    setMinimumRepayment(calculateMinimumRepayment(loanAmount));\r\n  }, [loanAmount]);\r\n\r\n  useEffect(() => {\r\n    setTotalLoanAmount(calculateTotalLoanAmount(loanAmount, minimumRepayment));\r\n  }, [loanAmount, minimumRepayment]);\r\n\r\n  useEffect(() => {\r\n    setTwoPercentOfInterestPaid(\r\n      calculate2PercentOfInterestPaid(loanAmount, repaymentAmount, totalLoanAmount)\r\n    );\r\n  }, [loanAmount, repaymentAmount, totalLoanAmount, twoPercentOfInterestPaid]);\r\n\r\n  useEffect(() => {\r\n    setBorrowerRewards(\r\n      calculateBorrowerRewards(minimumRepayment, repaymentAmount, twoPercentOfInterestPaid)\r\n    );\r\n  }, [minimumRepayment, repaymentAmount, twoPercentOfInterestPaid]);\r\n\r\n  function handleSetLoanAmount(e) {\r\n    setLoanAmount(Number(e.target.value));\r\n  }\r\n\r\n  function handleSetRepaymentAmount(e) {\r\n    setRepaymentAmount(Number(e.target.value));\r\n  }\r\n\r\n  function handleUpdateRefValue() {\r\n    input.current.value = Number(minimumRepayment.toFixed(2));\r\n  }\r\n\r\n  function handleSetBorrowerAccountPrivateKey(e) {\r\n    if (e.target.value.length === 56 && e.target.value.indexOf('S') === 0) {\r\n      setBorrowerAccountPrivateKey(e.target.value);\r\n      setIsHidden(false);\r\n    } else {\r\n      setIsHidden(true);\r\n      setBorrowerAccountPrivateKey(false);\r\n    }\r\n  }\r\n\r\n  function handleSubmitTransactionClicked(e) {\r\n    e.preventDefault();\r\n    transactionSubmitter(\r\n      borrowerAccountPrivateKey,\r\n      borrowerRewards,\r\n      twoPercentOfInterestPaid,\r\n      setTransactionSuccessful\r\n    );\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (minimumRepayment <= repaymentAmount) {\r\n      setIsMinimumRepaymentAlertHidden(true);\r\n    } else if (minimumRepayment > repaymentAmount) {\r\n      setIsMinimumRepaymentAlertHidden(false);\r\n    }\r\n  }, [minimumRepayment, repaymentAmount]);\r\n\r\n  return (\r\n    <div className='overflow-x-hidden overflow-y-hidden '>\r\n      <div className='bg-white rounded-lg shadow sm:max-w-md sm:w-full sm:mx-auto sm:overflow-hidden md:my-10 '>\r\n        <div className='px-4 py-8 sm:px-10'>\r\n          <div className='flex justify-center'>\r\n            <span className='text-gray-500 bg-white'>\r\n              The loan is for 5 years, with an 8% annual interest\r\n            </span>\r\n          </div>\r\n          <div className='relative mt-6'>\r\n            <div className='absolute inset-0 flex items-center'>\r\n              <div className='w-full border-t border-gray-300'></div>\r\n            </div>\r\n            <div className='relative flex justify-center text-sm leading-5'>\r\n              <span className='px-2 text-gray-500 bg-white'>Loan Repayment Simulator</span>\r\n            </div>\r\n          </div>\r\n          <div className='mt-6'>\r\n            <div className='w-full space-y-6'>\r\n              <div className='w-full'>\r\n                <div className=' relative '>\r\n                  <input\r\n                    type='number'\r\n                    id='loan-amount'\r\n                    onChange={handleSetLoanAmount}\r\n                    className={\r\n                      'rounded-lg border-transparent flex-1 appearance-none border border-gray-300 w-full py-2 px-4 bg-white text-gray-700 placeholder-gray-400 shadow-sm text-base focus:outline-none focus:ring-2 focus:ring-purple-600 focus:border-transparent'\r\n                    }\r\n                    placeholder='Loan amount'\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className='w-full'>\r\n                <div className=' relative '>\r\n                  <input\r\n                    type='text'\r\n                    id='repayment-amount'\r\n                    onChange={handleSetRepaymentAmount}\r\n                    ref={input}\r\n                    className={\r\n                      repaymentAmount.toFixed(2) >= minimumRepayment.toFixed(2)\r\n                        ? 'rounded-lg border-transparent flex-1 appearance-none border border-gray-300 w-full py-2 px-4 bg-white text-gray-700 placeholder-gray-400 shadow-sm text-base focus:outline-none focus:ring-2 focus:ring-purple-600 focus:border-transparent '\r\n                        : 'rounded-lg border-transparent flex-1 appearance-none border border-red-500 w-full py-2 px-4 bg-white text-gray-700 placeholder-gray-400 shadow-sm text-base focus:outline-none focus:ring-2 focus:ring-purple-600 focus:border-transparent '\r\n                    }\r\n                  />\r\n                  <p className='text-gray-500 mt-2'>\r\n                    {`The minimum repayment amount is `}\r\n                    <button\r\n                      id='set-minimum-repayment'\r\n                      className='border-b border-gray-700'\r\n                      onClick={handleUpdateRefValue}>\r\n                      {minimumRepayment.toFixed(2)}\r\n                    </button>\r\n                  </p>\r\n                </div>\r\n              </div>\r\n              <div className='w-full'>\r\n                <div className=' relative '>\r\n                  <label\r\n                    forhtml='private-key'\r\n                    className='relative text-gray-400 focus-within:text-gray-600 block'>\r\n                    <SiStellar className='pointer-events-none w-4 h-4 absolute top-1/2 transform -translate-y-1/2 left-3' />\r\n                    <input\r\n                      name='private-key'\r\n                      type='text'\r\n                      id='private-key'\r\n                      onChange={handleSetBorrowerAccountPrivateKey}\r\n                      className=' rounded-lg border-transparent border border-gray-300 bg-white placeholder-gray-400 text-gray-700 appearance-none w-full block pl-14 shadow-sm text-base focus:outline-none focus:ring-2 focus:ring-purple-600 focus:border-transparent'\r\n                      placeholder='Stellar Private Key'\r\n                    />\r\n                  </label>\r\n                  {borrowerAccountPrivateKey == false ? (\r\n                    <div className='text-gray-500 mt-2'>\r\n                      Enter valid Private Key to be able to submit transaction\r\n                    </div>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </div>\r\n              </div>\r\n              <div>\r\n                <span className='block w-full rounded-md shadow-sm'>\r\n                  <button\r\n                    type='button'\r\n                    id='submit-transaction'\r\n                    hidden={isHidden}\r\n                    onClick={handleSubmitTransactionClicked}\r\n                    className='py-2 px-4  bg-indigo-600 hover:bg-indigo-700 focus:ring-indigo-500 focus:ring-offset-indigo-200 text-white w-full transition ease-in duration-200 text-center text-base font-semibold shadow-md focus:outline-none focus:ring-2 focus:ring-offset-2  rounded-lg '>\r\n                    Submit Transaction\r\n                  </button>\r\n                </span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className='px-4 py-6 border-t-2 border-gray-200 bg-gray-50 sm:px-10'>\r\n          {\r\n            <TransactionAlert\r\n              transactionSuccessful={transactionSuccessful}\r\n              hidden={hide}\r\n              alertMessage={alertMessage}\r\n            />\r\n          }\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","export const calculateMinimumRepayment = (loanAmount) => {\n  // 8% annual interest / 12 months\n  const INTEREST = 0.08 / 12;\n  // Five years * 12 months\n  const PAYMENTS = 5 * 12;\n  return Number(\n    (loanAmount * (INTEREST * (INTEREST + 1) ** PAYMENTS)) / ((INTEREST + 1) ** PAYMENTS - 1)\n  );\n};\n\nexport const calculateTotalLoanAmount = (loanAmount, minimumRepayment) => {\n  const PAYMENTS = 5 * 12;\n\n  return Number(minimumRepayment * PAYMENTS);\n};\n\nexport const calculateBorrowerRewards = (\n  minimumRepayment,\n  repaymentAmount,\n  twoPercentOfInterestPaid\n) => {\n  const differenceBetweenMinimumRepaymentAndRepaymentAmount = repaymentAmount - minimumRepayment;\n  if (\n    differenceBetweenMinimumRepaymentAndRepaymentAmount != undefined &&\n    twoPercentOfInterestPaid != undefined &&\n    differenceBetweenMinimumRepaymentAndRepaymentAmount < twoPercentOfInterestPaid\n  ) {\n    return Number(differenceBetweenMinimumRepaymentAndRepaymentAmount);\n  }\n  return Number(twoPercentOfInterestPaid);\n};\n\nexport const calculate2PercentOfInterestPaid = (loanAmount, repaymentAmount, totalLoanAmount) => {\n  const totalInterestAmount = totalLoanAmount - loanAmount;\n  return Number(repaymentAmount * ((totalInterestAmount * 100) / totalLoanAmount / 100) * 0.02);\n};\n","import React from 'react';\r\nimport './App.css';\r\nimport Home from './pages/Home';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className='w-screen h-screen'>\r\n      <Home></Home>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = (onPerfEntry) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}