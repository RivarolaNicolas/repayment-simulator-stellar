{"version":3,"sources":["components/TransactionAlert.js","helpers/stellar.js","pages/Home.js","helpers/calculator.js","App.js","reportWebVitals.js","index.js"],"names":["TransactionAlert","props","hidden","alertMessage","transactionSuccessful","className","StellarSdk","require","Home","useState","Number","loanAmount","setLoanAmount","minimumRepayment","setMinimumRepayment","repaymentAmount","setRepaymentAmount","totalLoanAmount","setTotalLoanAmount","twoPercentOfInterestPaid","setTwoPercentOfInterestPaid","borrowerRewards","setBorrowerRewards","setTransactionSuccessful","hide","setHide","setAlertMessage","isHidden","setIsHidden","isMinimumRepaymentAlertHidden","setIsMinimumRepaymentAlertHidden","borrowerAccountPrivateKey","setBorrowerAccountPrivateKey","useEffect","INTEREST","calculateMinimumRepayment","calculateTotalLoanAmount","calculate2PercentOfInterestPaid","differenceBetweenMinimumRepaymentAndRepaymentAmount","undefined","calculateBorrowerRewards","type","id","onChange","e","target","value","placeholder","forhtml","name","length","indexOf","onClick","preventDefault","server","Server","issuingKeys","Keypair","fromSecret","receivingKeys","WNT","Asset","publicKey","AUD","loadAccount","then","account","transaction","TransactionBuilder","fee","BASE_FEE","networkPassphrase","Networks","TESTNET","addOperation","Operation","changeTrust","asset","setTimeout","build","sign","submitTransaction","console","log","issuer","payment","destination","amount","toFixed","catch","error","transactionSubmitter","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fa5fd578.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst TransactionAlert = (props) => {\r\n  const hidden = props.hidden;\r\n  const alertMessage = props.alertMessage;\r\n  const transactionSuccessful = props.transactionSuccessful;\r\n  return (\r\n    <div>\r\n      <p\r\n        className={\r\n          transactionSuccessful == true\r\n            ? 'text-green-600 bg-green-100 rounded ' + hidden\r\n            : 'text-red-600 bg-red-100 rounded ' + hidden\r\n        }\r\n      >\r\n        {alertMessage}\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TransactionAlert;\r\n","const StellarSdk = require('stellar-sdk');\r\n\r\nconst issuerAccountPrivateKey = 'SBNJMFBUVROLXVHVZUK3SXXB5I6MN3AUJSUX5WCTQN6WBEDDZPF7DDJZ';\r\n\r\nexport const transactionSubmitter = (\r\n  borrowerAccountPrivateKey,\r\n  borrowerRewards,\r\n  twoPercentOfInterestPaid,\r\n  setTransactionSuccessful\r\n) => {\r\n  const server = new StellarSdk.Server('https://horizon-testnet.stellar.org');\r\n  // Keys for accounts to issue and receive the new asset\r\n  const issuingKeys = StellarSdk.Keypair.fromSecret(issuerAccountPrivateKey);\r\n  const receivingKeys = StellarSdk.Keypair.fromSecret(borrowerAccountPrivateKey);\r\n\r\n  // Create an object to represent the new asset\r\n  const WNT = new StellarSdk.Asset('WNT', issuingKeys.publicKey());\r\n  const AUD = new StellarSdk.Asset('AUD', issuingKeys.publicKey());\r\n\r\n  // First, the receiving account must trust the asset\r\n  server\r\n    .loadAccount(receivingKeys.publicKey())\r\n    .then(function (account) {\r\n      const transaction = new StellarSdk.TransactionBuilder(account, {\r\n        fee: StellarSdk.BASE_FEE,\r\n        networkPassphrase: StellarSdk.Networks.TESTNET,\r\n      })\r\n        .addOperation(\r\n          StellarSdk.Operation.changeTrust({\r\n            asset: WNT,\r\n          })\r\n        )\r\n        .addOperation(\r\n          StellarSdk.Operation.changeTrust({\r\n            asset: AUD,\r\n          })\r\n        )\r\n\r\n        // setTimeout is required for a transaction\r\n        .setTimeout(100)\r\n        .build();\r\n      transaction.sign(receivingKeys);\r\n      return server.submitTransaction(transaction);\r\n    })\r\n\r\n    .then(console.log())\r\n\r\n    // Second, the issuing account actually sends a payment using the asset\r\n    .then(function () {\r\n      return server.loadAccount(issuingKeys.publicKey());\r\n    })\r\n    .then(function (issuer) {\r\n      const transaction = new StellarSdk.TransactionBuilder(issuer, {\r\n        fee: StellarSdk.BASE_FEE,\r\n        networkPassphrase: StellarSdk.Networks.TESTNET,\r\n      })\r\n        .addOperation(\r\n          StellarSdk.Operation.payment({\r\n            destination: receivingKeys.publicKey(),\r\n            asset: WNT,\r\n            amount: borrowerRewards.toFixed(2),\r\n          })\r\n        )\r\n        .addOperation(\r\n          StellarSdk.Operation.payment({\r\n            destination: receivingKeys.publicKey(),\r\n            asset: AUD,\r\n            amount: twoPercentOfInterestPaid.toFixed(2),\r\n          })\r\n        )\r\n        // setTimeout is required for a transaction\r\n        .setTimeout(100)\r\n        .build();\r\n      transaction.sign(issuingKeys);\r\n      return server.submitTransaction(transaction);\r\n    })\r\n    .then(\r\n      () => setTransactionSuccessful(true),\r\n      () => setTransactionSuccessful(false)\r\n    )\r\n    .catch(function (error) {\r\n      console.error('Error!', error);\r\n    });\r\n};\r\n","import React from 'react';\r\nimport { useState, useEffect } from 'react';\r\nimport {\r\n  calculateMinimumRepayment,\r\n  calculateTotalLoanAmount,\r\n  calculate2PercentOfInterestPaid,\r\n  calculateBorrowerRewards,\r\n} from '../helpers/calculator';\r\nimport TransactionAlert from '../components/TransactionAlert';\r\nimport { transactionSubmitter } from '../helpers/stellar';\r\nimport { SiStellar } from 'react-icons/si';\r\n\r\nconst Home = (props) => {\r\n  const [loanAmount, setLoanAmount] = useState(Number);\r\n  const [minimumRepayment, setMinimumRepayment] = useState(Number);\r\n  const [repaymentAmount, setRepaymentAmount] = useState(999999);\r\n  const [totalLoanAmount, setTotalLoanAmount] = useState(Number);\r\n  const [twoPercentOfInterestPaid, setTwoPercentOfInterestPaid] = useState(Number);\r\n  const [borrowerRewards, setBorrowerRewards] = useState(Number);\r\n  const [transactionSuccessful, setTransactionSuccessful] = useState(null);\r\n  const [hide, setHide] = useState('invisible');\r\n\r\n  const [alertMessage, setAlertMessage] = useState('');\r\n  const [isHidden, setIsHidden] = useState(true);\r\n  const [isMinimumRepaymentAlertHidden, setIsMinimumRepaymentAlertHidden] = useState(true);\r\n\r\n  const borrowerAccountPrivateKey = props.borrowerAccountPrivateKey;\r\n  const setBorrowerAccountPrivateKey = props.setBorrowerAccountPrivateKey;\r\n\r\n  useEffect(() => {\r\n    if (transactionSuccessful === true) {\r\n      setHide(false);\r\n      setAlertMessage('Transaction Succesful');\r\n    } else if (transactionSuccessful === false) {\r\n      setHide(false);\r\n      setAlertMessage('Transaction Failed');\r\n    }\r\n  }, [transactionSuccessful]);\r\n\r\n  useEffect(() => {\r\n    setMinimumRepayment(calculateMinimumRepayment(loanAmount));\r\n  }, [loanAmount]);\r\n\r\n  useEffect(() => {\r\n    setTotalLoanAmount(calculateTotalLoanAmount(loanAmount, minimumRepayment));\r\n  }, [loanAmount, minimumRepayment]);\r\n\r\n  useEffect(() => {\r\n    setTwoPercentOfInterestPaid(\r\n      calculate2PercentOfInterestPaid(loanAmount, repaymentAmount, totalLoanAmount)\r\n    );\r\n  }, [loanAmount, repaymentAmount, totalLoanAmount, twoPercentOfInterestPaid]);\r\n\r\n  useEffect(() => {\r\n    setBorrowerRewards(\r\n      calculateBorrowerRewards(minimumRepayment, repaymentAmount, twoPercentOfInterestPaid)\r\n    );\r\n  }, [minimumRepayment, repaymentAmount, twoPercentOfInterestPaid]);\r\n\r\n  function handleSetLoanAmount(e) {\r\n    setLoanAmount(Number(e.target.value));\r\n  }\r\n\r\n  function handleSetRepaymentAmount(e) {\r\n    setRepaymentAmount(Number(e.target.value));\r\n  }\r\n\r\n  function handleSetBorrowerAccountPrivateKey(e) {\r\n    if (e.target.value.length === 56 && e.target.value.indexOf('S') === 0) {\r\n      setBorrowerAccountPrivateKey(e.target.value);\r\n      setIsHidden(false);\r\n    } else {\r\n      setIsHidden(true);\r\n      setBorrowerAccountPrivateKey(false);\r\n    }\r\n  }\r\n\r\n  function handleSubmitTransactionClicked(e) {\r\n    e.preventDefault();\r\n    transactionSubmitter(\r\n      borrowerAccountPrivateKey,\r\n      borrowerRewards,\r\n      twoPercentOfInterestPaid,\r\n      setTransactionSuccessful\r\n    );\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (minimumRepayment <= repaymentAmount) {\r\n      setIsMinimumRepaymentAlertHidden(true);\r\n    } else if (minimumRepayment > repaymentAmount) {\r\n      setIsMinimumRepaymentAlertHidden(false);\r\n    }\r\n  }, [minimumRepayment, repaymentAmount]);\r\n\r\n  return (\r\n    <div className=\"overflow-x-hidden overflow-y-hidden \">\r\n      <div className=\"bg-white rounded-lg shadow sm:max-w-md sm:w-full sm:mx-auto sm:overflow-hidden md:my-10 \">\r\n        <div className=\"px-4 py-8 sm:px-10\">\r\n          <div className=\"relative mt-6\">\r\n            <div className=\"absolute inset-0 flex items-center\">\r\n              <div className=\"w-full border-t border-gray-300\"></div>\r\n            </div>\r\n            <div className=\"relative flex justify-center text-sm leading-5\">\r\n              <span className=\"px-2 text-gray-500 bg-white\">Loan Repayment Simulator</span>\r\n            </div>\r\n          </div>\r\n          <div className=\"mt-6\">\r\n            <div className=\"w-full space-y-6\">\r\n              <div className=\"w-full\">\r\n                <div className=\" relative \">\r\n                  <input\r\n                    type=\"text\"\r\n                    id=\"loan-amount\"\r\n                    onChange={handleSetLoanAmount}\r\n                    className={\r\n                      'rounded-lg border-transparent flex-1 appearance-none border border-gray-300 w-full py-2 px-4 bg-white text-gray-700 placeholder-gray-400 shadow-sm text-base focus:outline-none focus:ring-2 focus:ring-purple-600 focus:border-transparent'\r\n                    }\r\n                    placeholder=\"Loan amount\"\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"w-full\">\r\n                <div className=\" relative \">\r\n                  <input\r\n                    type=\"text\"\r\n                    id=\"repayment-amount\"\r\n                    onChange={handleSetRepaymentAmount}\r\n                    className={\r\n                      repaymentAmount > minimumRepayment\r\n                        ? 'rounded-lg border-transparent flex-1 appearance-none border border-gray-300 w-full py-2 px-4 bg-white text-gray-700 placeholder-gray-400 shadow-sm text-base focus:outline-none focus:ring-2 focus:ring-purple-600 focus:border-transparent '\r\n                        : 'rounded-lg border-transparent flex-1 appearance-none border border-red-500 w-full py-2 px-4 bg-white text-gray-700 placeholder-gray-400 shadow-sm text-base focus:outline-none focus:ring-2 focus:ring-purple-600 focus:border-transparent '\r\n                    }\r\n                    placeholder=\"Repayment amount\"\r\n                  />\r\n                  <p className=\"text-red-500\" hidden={isMinimumRepaymentAlertHidden}>\r\n                    You have to make equal or more than the minimum repayment\r\n                  </p>\r\n                </div>\r\n              </div>\r\n              <div className=\"w-full\">\r\n                <div className=\" relative \">\r\n                  <label\r\n                    forhtml=\"private-key\"\r\n                    className=\"relative text-gray-400 focus-within:text-gray-600 block\"\r\n                  >\r\n                    <SiStellar className=\"pointer-events-none w-4 h-4 absolute top-1/2 transform -translate-y-1/2 left-3\" />\r\n                    <input\r\n                      name=\"private-key\"\r\n                      type=\"text\"\r\n                      id=\"private-key\"\r\n                      onChange={handleSetBorrowerAccountPrivateKey}\r\n                      className=\" rounded-lg border-transparent border border-gray-300 bg-white placeholder-gray-400 text-gray-700 appearance-none w-full block pl-14 shadow-sm text-base focus:outline-none focus:ring-2 focus:ring-purple-600 focus:border-transparent\"\r\n                      placeholder=\"Stellar Private Key\"\r\n                    />\r\n                  </label>\r\n                  {borrowerAccountPrivateKey == false ? (\r\n                    <div className=\"text-gray-500 mt-2\">\r\n                      Enter valid Private Key to be able to submit transaction\r\n                    </div>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </div>\r\n              </div>\r\n              <div>\r\n                <span className=\"block w-full rounded-md shadow-sm\">\r\n                  <button\r\n                    type=\"button\"\r\n                    id=\"submit-transaction\"\r\n                    hidden={isHidden}\r\n                    onClick={handleSubmitTransactionClicked}\r\n                    className=\"py-2 px-4  bg-indigo-600 hover:bg-indigo-700 focus:ring-indigo-500 focus:ring-offset-indigo-200 text-white w-full transition ease-in duration-200 text-center text-base font-semibold shadow-md focus:outline-none focus:ring-2 focus:ring-offset-2  rounded-lg \"\r\n                  >\r\n                    Submit Transaction\r\n                  </button>\r\n                </span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"px-4 py-6 border-t-2 border-gray-200 bg-gray-50 sm:px-10\">\r\n          {\r\n            <TransactionAlert\r\n              transactionSuccessful={transactionSuccessful}\r\n              hidden={hide}\r\n              alertMessage={alertMessage}\r\n            />\r\n          }\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","export const calculateMinimumRepayment = (loanAmount) => {\r\n  //8% annual interest / 12 months\r\n  const INTEREST = 0.08 / 12;\r\n  //Five years * 12 months\r\n  const PAYMENTS = 5 * 12;\r\n  return Number(\r\n    (loanAmount * (INTEREST * (INTEREST + 1) ** PAYMENTS)) / ((INTEREST + 1) ** PAYMENTS - 1)\r\n  );\r\n};\r\n\r\nexport const calculateTotalLoanAmount = (loanAmount, minimumRepayment) => {\r\n  const PAYMENTS = 5 * 12;\r\n\r\n  return Number(minimumRepayment * PAYMENTS);\r\n};\r\n\r\nexport const calculateBorrowerRewards = (\r\n  minimumRepayment,\r\n  repaymentAmount,\r\n  twoPercentOfInterestPaid\r\n) => {\r\n  const differenceBetweenMinimumRepaymentAndRepaymentAmount = repaymentAmount - minimumRepayment;\r\n  if (\r\n    differenceBetweenMinimumRepaymentAndRepaymentAmount != undefined &&\r\n    twoPercentOfInterestPaid != undefined &&\r\n    differenceBetweenMinimumRepaymentAndRepaymentAmount < twoPercentOfInterestPaid\r\n  ) {\r\n    return Number(differenceBetweenMinimumRepaymentAndRepaymentAmount);\r\n  } else {\r\n    return Number(twoPercentOfInterestPaid);\r\n  }\r\n};\r\n\r\nexport const calculate2PercentOfInterestPaid = (loanAmount, repaymentAmount, totalLoanAmount) => {\r\n  const totalInterestAmount = totalLoanAmount - loanAmount;\r\n  return Number(repaymentAmount * ((totalInterestAmount * 100) / totalLoanAmount / 100) * 0.02);\r\n};\r\n","import React, { useState } from 'react';\nimport './App.css';\nimport Home from './pages/Home';\n\n// import IssueNewAsset from './components/IssueNewAsset';\n\nfunction App() {\n  const [borrowerAccountPrivateKey, setBorrowerAccountPrivateKey] = useState('');\n  return (\n    <div className=\"w-screen h-screen\">\n      <Home\n        setBorrowerAccountPrivateKey={setBorrowerAccountPrivateKey}\n        borrowerAccountPrivateKey={borrowerAccountPrivateKey}\n      ></Home>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}